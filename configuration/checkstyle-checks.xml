<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
	<property name="fileExtensions" value="java, properties, xml"/>
	<property name="tabWidth" value="4"/>
	<property name="severity" value="error"/> <!-- Strict enforcement -->

	<!-- Headers -->
	<module name="Header">
		<property name="headerFile" value="${workspace_loc}/configuration/checkstyle-header.txt"/>
		<property name="fileExtensions" value="java"/>
		<property name="ignoreLines" value="2"/>
	</module>

	<!-- Javadoc Comments -->
	<module name="JavadocPackage"/>

	<!-- Suppressions -->
	<module name="SuppressionFilter">
		<property name="file" value="${workspace_loc}/configuration/checkstyle-suppressions.xml"/>
		<property name="optional" value="false"/>
	</module>

	<!-- Miscellaneous -->
	<module name="LineLength">
		<property name="max" value="160"/>
	</module>
	<module name="NewlineAtEndOfFile"/>
	<module name="UniqueProperties">
		<property name="fileExtensions" value="properties"/>
	</module>

	<module name="TreeWalker">
		<!-- Annotations -->
		<module name="AnnotationLocation">
			<property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
		</module>
		<module name="AnnotationUseStyle"/>
		<module name="MissingDeprecated"/>
		<module name="MissingOverride"/>
		<module name="PackageAnnotation"/>

		<!-- Blocks -->
		<module name="AvoidNestedBlocks">
			<property name="allowInSwitchCase" value="true"/>
		</module>
		<module name="EmptyBlock">
			<property name="option" value="text"/>
		</module>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="expected|ignore|ignored"/>
		</module>
		<module name="LeftCurly">
			<property name="ignoreEnums" value="false"/>
			<property name="tokens" value="ANNOTATION_DEF, CLASS_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF"/>
		</module>
		<module name="NeedBraces">
			<property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE, LITERAL_CASE, LITERAL_DEFAULT, LAMBDA"/>
			<property name="allowSingleLineStatement" value="true"/>
		</module>
		<module name="RightCurly">
			<property name="option" value="alone_or_singleline"/>
		</module>

		<!-- Class Design -->
		<module name="FinalClass"/>
		<module name="HideUtilityClassConstructor"/>
		<module name="InnerTypeLast"/>
		<module name="InterfaceIsType"/>
		<module name="MutableException"/>
		<module name="OneTopLevelClass"/>
		<module name="VisibilityModifier"/>

		<!-- Coding -->
		<module name="CovariantEquals"/>
		<module name="DeclarationOrder"/>
		<module name="DefaultComesLast"/>
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<module name="ExplicitInitialization"/>
		<module name="FallThrough"/>
		<module name="IllegalInstantiation"/>
		<module name="IllegalThrows"/>
		<module name="IllegalToken"/>
		<module name="IllegalTokenText"/>
		<module name="IllegalType"/>
		<module name="InnerAssignment"/>
		<module name="MagicNumber"/>
		<module name="MissingCtor"/>
		<module name="MissingSwitchDefault"/>
		<module name="MultipleVariableDeclarations"/>
		<module name="NoArrayTrailingComma"/>
		<module name="NoClone"/>
		<module name="NoFinalizer"/>
		<module name="OneStatementPerLine"/>
		<module name="PackageAnnotation"/>
		<module name="ParameterAssignment"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		<module name="SuperClone"/>
		<module name="SuperFinalize"/>
		<module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
		<module name="UnnecessaryParentheses"/>

		<!-- Imports -->
		<module name="AvoidStarImport"/>
		<module name="AvoidStaticImport"/>
		<module name="ImportOrder">
			<property name="groups" value="android,dalvik,com,edu,io,java,javax,javassist,me,net,org"/>
			<property name="ordered" value="true"/>
			<property name="separated" value="true"/>
			<property name="option" value="bottom"/>
			<property name="sortStaticImportsAlphabetically" value="true"/>
		</module>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>

		<!-- Javadoc Comments -->
		<module name="AtclauseOrder"/>
		<module name="InvalidJavadocPosition"/>
		<module name="JavadocBlockTagLocation"/>
		<module name="JavadocContentLocationCheck"/>
		<module name="JavadocMethod">
			<property name="validateThrows" value="true"/>
		</module>
		<module name="JavadocMissingLeadingAsterisk"/>
		<module name="JavadocMissingWhitespaceAfterAsterisk"/>
		<module name="JavadocParagraph"/>
		<module name="JavadocStyle"/>
		<module name="JavadocTagContinuationIndentation"/>
		<module name="JavadocType"/>
		<module name="JavadocVariable"/>
		<module name="MissingJavadocMethod">
			<property name="allowedAnnotations" value="Override,Deprecated"/>
			<!-- <property name="allowMissingPropertyJavadoc" value="true"/> -->
		</module>
		<module name="NonEmptyAtclauseDescription"/>
		<module name="RequireEmptyLineBeforeBlockTagGroup"/>
		<module name="SingleLineJavadoc"/>
		<module name="SummaryJavadocCheck"/>

		<!-- Modifiers -->
		<module name="ModifierOrder"/>
		<module name="RedundantModifier"/>

		<!-- Naming Conventions -->
		<module name="AbbreviationAsWordInName">
			<property name="ignoreFinal" value="true"/>
			<property name="allowedAbbreviationLength" value="1"/>
		</module>
		<module name="AbstractClassName"/>
		<module name="CatchParameterName">
			<property name="format" value="^(ex|[a-z][a-z][a-zA-Z]+)$"/>
		</module>
		<module name="ClassTypeParameterName"/>
		<module name="ConstantName">
			<property name="format" value="^([a-z][a-zA-Z0-9]+|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*)$"/>
		</module>
		<module name="InterfaceTypeParameterName"/>
		<module name="LocalFinalVariableName">
			<property name="format" value="^([a-z][a-zA-Z0-9]+|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*)$"/>
		</module>
		<module name="LocalVariableName">
			<property name="allowOneCharVarInForLoop" value="true"/>
		</module>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="MethodTypeParameterName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="TypeName"/>

		<!-- Size Violations -->
		<module name=" AnonInnerLength "/>
		<module name="MethodLength">
			<property name="max" value="200"/>
		</module>
		<module name="OuterTypeNumber"/>

		<!-- Suppressions -->
		<module name="SuppressionCommentFilter">
			<property name="offCommentFormat" value="@formatter\:off"/>
			<property name="onCommentFormat" value="@formatter\:on"/>
			<property name="checkFormat" value="SingleSpaceSeparator"/>
		</module>

		<module name="SuppressionCommentFilter">
			<property name="offCommentFormat" value="@checkstyle off\: ([\w\|]+)"/>
			<property name="onCommentFormat" value="@checkstyle on\: ([\w\|]+)"/>
			<property name="checkFormat" value="$1"/>
		</module>

		<!-- Whitespace -->
		<module name="EmptyForInitializerPad"/>
		<module name="EmptyForIteratorPad"/>
		<module name="GenericWhitespace"/>
		<module name="MethodParamPad"/>
		<module name="NoLineWrap"/>
		<module name="NoWhitespaceAfter">
			<property name="tokens" value="INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP"/> 
		</module>
		<module name="NoWhitespaceBefore"/>
		<module name="OperatorWrap"/>
		<module name="ParenPad"/>
		<module name="RegexpSinglelineJava">
			<property name="format" value="^\t* +([^\*]| \*)"/>
			<property name="message" value="Indent must use tab characters"/>
		</module>
		<module name="SeparatorWrap">
			<property name="tokens" value="COMMA, SEMI, ELLIPSIS, LPAREN, ARRAY_DECLARATOR, RBRACK"/>
		</module>
		<module name="SingleSpaceSeparator"/>
		<module name="TypecastParenPad"/>
		<module name="WhitespaceAfter">
			<property name="tokens" value="COMMA, SEMI, TYPECAST, LITERAL_ELSE, LITERAL_DO, DO_WHILE"/>
		</module>
		<module name="WhitespaceAround">
			<!-- <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
			BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LE, LITERAL_CATCH,LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/> -->
			<property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LE, LITERAL_DO, LITERAL_FINALLY, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
		</module>
		
		<!-- Regex enforcements -->
		<module name="RegexpSinglelineJava"> <!-- No whitespace between a closing parentheses and opening curly bracket (eg: ) { ) -->
			<property name="format" value="(\) \{)"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace between close parentheses and open curly bracket ') {'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace between a colon and opening curly bracket (eg:  : { ) -->
			<property name="format" value="(\: \{)"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace between colon and open curly bracket ': {'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace before or after the parentheses in a catch declaration (eg: catch (exception) {) -->
			<property name="format" value="(?i)((catch {1,}\(.*\))|(catch\(.*\) {1,}\{)|(catch {1,}\(.*\) {1,}\{))"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace before or after 'catch'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace before or after the parentheses in a for declaration (eg: for (condition) {) -->
			<property name="format" value="(?i)((for {1,}\(.*\))|(for\(.*\) {1,}\{)|(for {1,}\(.*\) {1,}\{))"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace before or after 'for'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace before or after the parentheses in an if declaration (eg: if (condition) {) -->
			<property name="format" value="(?i)((if {1,}\(.*\))|(if\(.*\) {1,}\{)|(if {1,}\(.*\) {1,}\{))"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace before or after 'if'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace before or after the parentheses in a switch declaration (eg: switch (condition) {) -->
			<property name="format" value="(?i)((switch {1,}\(.*\))|(switch\(.*\) {1,}\{)|(switch {1,}\(.*\) {1,}\{))"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace before or after 'switch'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace before or after the parentheses in a try-with-resources declaration (eg: try (resource) {) -->
			<property name="format" value="(?i)((try {1,}\(.*\))|(try\(.*\) {1,}\{)|(try {1,}\(.*\) {1,}\{))"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace before or after 'try-with-resources'"/>
		</module>
		<module name="RegexpSinglelineJava"> <!-- No whitespace before or after the parentheses in a while declaration (eg: while (condition) {) -->
			<property name="format" value="(?i)((while {1,}\(.*\))|(while\(.*\) {1,}\{)|(while {1,}\(.*\) {1,}\{))"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Whitespace before or after 'while'"/>
		</module>

		<!-- Miscellaneous -->
		<module name="ArrayTypeStyle"/>
		<module name="AvoidEscapedUnicodeCharacters">
			<property name="allowEscapesForControlCharacters" value="true"/>
			<property name="allowNonPrintableEscapes" value="true"/>
		</module>
		<module name="CommentsIndentation"/>
		<module name="EmptyLineSeparator">
			<property name="allowMultipleEmptyLines" value="false"/>
			<property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
			<property name="tokens" value="PACKAGE_DEF, IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF"/>
		</module>
		<module name="FinalParameters"/>
		<module name="Indentation"/>
		<module name="OuterTypeFilename"/>
		<!-- <module name="TodoComment"><property name="format" value="(TODO)|(FIXME)"/></module> -->
	</module>
</module>