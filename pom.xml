<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.spotrealms</groupId>
	<artifactId>javautils</artifactId>
	<name>JavaUtils</name>
	<description>Provides a set of utility classes and methods for other Java projects</description>
	<url>https://spotrealms.com</url>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<!-- Set Java version to use as well as encoding -->
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<!-- Set software license -->
	<licenses>
		<license>
			<name>GNU Lesser General Public License, Version 3.0</name>
			<url>https://www.gnu.org/licenses/lgpl-3.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	
	<!-- Dependencies -->
	<dependencies>
		<!-- JetBrains annotation processor -->
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>20.1.0</version>
			<scope>compile</scope>
		</dependency>
		<!-- Json.org JSON (user-provided if they use the JSON type validator) -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20230227</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	
	<!-- Set build properties -->
	<build>
		<!-- Set Maven defaults -->
		<defaultGoal>clean package</defaultGoal>
		<finalName>${project.name}-${project.version}</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		
		<plugins>
			<!-- Generate code style reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<failOnViolation>true</failOnViolation> <!-- Fail the build if the codestyle checks fail -->
					<consoleOutput>true</consoleOutput>
					<logViolationsToConsole>true</logViolationsToConsole>
					<failsOnError>true</failsOnError>
					<violationSeverity>warning</violationSeverity>
					<configLocation>${project.basedir}/configuration/checkstyle-checks.xml</configLocation>
					<suppressionsLocation>${project.basedir}/configuration/checkstyle-suppressions.xml</suppressionsLocation>
					<propertyExpansion>workspace_loc=${project.basedir}</propertyExpansion>
					<linkXRef>false</linkXRef>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.39</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>check</id>
						<phase>test</phase>
						<goals><goal>check</goal></goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Check for common errors in code using Spotbugs -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.2.0</version>
				<configuration>
					<effort>Max</effort> <!-- Maximum bug catching aggressiveness -->
					<threshold>Low</threshold> <!-- Low bug tolerance -->
					<includeTests>true</includeTests>
					<failOnError>true</failOnError> <!-- Fail the build if the spotbugs checks fail -->
					<excludeFilterFile>${project.basedir}/configuration/spotbugs-filters.xml</excludeFilterFile>
				</configuration>
				<executions>
					<execution>
						<id>check</id>
						<phase>test</phase>
						<goals><goal>check</goal></goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Check for common errors in code using PMD -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.13.0</version> <!-- or use version from pluginManagement -->
				<configuration>
					<failOnViolation>true</failOnViolation> <!-- failOnViolation is actually true by default, but can be disabled -->
					<printFailingErrors>true</printFailingErrors> <!-- printFailingErrors is pretty useful -->
					<linkXRef>false</linkXRef>
					<excludeFromFailureFile>${project.basedir}/configuration/pmd-exclusions.properties</excludeFromFailureFile>
				</configuration>
				<executions>
					<execution>
						<id>check</id>
						<phase>test</phase>
						<goals><goal>check</goal></goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- Compile the project into a JAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<!-- Generate JavaDoc JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Generate JAR file with sources to maintain GPL compatibility -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>